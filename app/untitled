def captchaSolver(imagezip):
tempdir=tempfile.mkdtemp(dir=APP_STATIC)
imagezip.extractall(tempdir)
img1 = cv2.imread('ghost.png')
img1b=cv2.cvtColor(img1,cv2.COLOR_BGR2GRAY)
ret,img1t=cv2.threshold(img1b,244,255,cv2.THRESH_BINARY)
#img3 = cv2.imread('ghost2.png')
sift = cv2.SIFT()
kp1, des1 = sift.detectAndCompute(img1t,None)
#kp3, des3 = sift.detectAndCompute(img3,None)
retstuf = []
for i in range(0,9):
#img2=cv2.imread(os.path.join(tempdir,'image'+str(i)+'.png'))
img2=cv2.imread('get_captcha 2/image'+str(i)+'.png')
img2b=cv2.cvtColor(img2,cv2.COLOR_BGR2GRAY)
ret,img2t=cv2.threshold(img2b,244,255,cv2.THRESH_BINARY)

kp2, des2 = sift.detectAndCompute(img2t,None)
matcher = cv2.FlannBasedMatcher({'algorithm':0,'trees':5},{'checks':50})
#matcher2 = cv2.FlannBasedMatcher({'algorithm':0,'trees':5},{'checks':50})
matches = matcher.knnMatch(des1,des2,k=1)
#matches2 = matcher2.knnMatch(des3,des2,k=1)
a=sorted(map(lambda x: x.distance,sum(matches,[])))
b=a[:10]
#c=sorted(map(lambda y: y.distance,sum(matches2,[])))
#d=c[:10]
	if (b[0]<100):
		retstuf[i]=1
	else:
		retstuf[i]=0

shutil.rmtree(tempdir)
return ''.join(['1' if x else '0' for x in retstuf)